@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="container">
    <div class="col-lg-6">
        <div class="input-group">
            <input id="cityName" type="text" class="form-control" placeholder="目的城市" style="height:100%">
            <span class="input-group-btn">
                <button id="setCity" class="btn btn-default" type="button">Go!</button>
            </span>
        </div>
    </div>
    <div class="startSiteInput">
        <input id="startSite" type="text" placeholder="请输入旅游开始地点" style="height:100%">
    </div>
    <div class="buildBtn">
        <button id="buildRoute" class="btn btn-block btn-success" type="button">生成旅游方案</button>
    </div>
</div>
<div id="panel"></div>
<script>
    var model = {};
    model.SelectStateArray = [];
    model.startSite = "";
    var lnglatXY=[121.498586, 31.239637]	//默认地址：上海市
    var map = new AMap.Map('container',{
        zoom: 10,
        center: lnglatXY
    });
    AMap.service('AMap.Geocoder', function () {//回调函数
        //实例化Geocoder
        geocoder = new AMap.Geocoder();
        //TODO: 使用geocoder 对象完成相关功能
        geocoder.getAddress(lnglatXY, function (status, result) {
            if (status === 'complete' && result.info === 'OK') {
                model.CityId = result.regeocode.addressComponent.citycode;
                AMap.service('AMap.PlaceSearch', function () {//回调函数
                    var placeSearch = new AMap.PlaceSearch({ //构造地点查询类
                        pageSize: 50,
                        pageIndex: 1,
                        type: '风景名胜',
                        city: result.regeocode.addressComponent.citycode, //城市
                        map: map,
                        panel: "panel"
                    });
                    //关键字查询
                    placeSearch.search('', function (status, result) {
                        
                        $("ul .poibox").on("click", function () {
                            if ($(this).css("background-Color") == "rgb(246, 246, 246)") {
                                $(this).css("background-Color", "green");
                                model.SelectStateArray.push(result.poiList.pois[$(this).index()].id);
                            }
                            else {
                                $(this).css("background-Color", "");
                            }
                        });
                    });
                });
            } else {
                //获取地址失败
            }
        });
    });
    
    $("#buildRoute").on("click", function () {
        if (model.startSite == "" || $("#startSite").val() == "") {
            $("#startSite").focus();
            return;
        }

        var tempForm = document.createElement("form");
        tempForm.id = "tempForm1";
        tempForm.method = "post";
        tempForm.action = "@Url.Content("~/home/TestPost")";
        tempForm.target = "_blank";
        
        createInput("cityid", model.CityId, tempForm);
        for (var i = 0; i < model.SelectStateArray.length; i++) {
            createInput("SelectStateArray["+i+"]", model.SelectStateArray[i], tempForm);
        }
        createInput("startSite", model.startSite, tempForm);
        document.body.appendChild(tempForm);
        tempForm.submit();
    });

    function createInput(name, value, root) {
        var hidePrintNum = document.createElement("input");
        hidePrintNum.type = "hidden";
        hidePrintNum.name = name;
        hidePrintNum.value = value;
        root.appendChild(hidePrintNum);
    }

    $("#setCity").on("click", function () {
        var cityName = $("#cityName").val().trim();
        AMap.service('AMap.Geocoder', function () {//回调函数
            //实例化Geocoder
            geocoder = new AMap.Geocoder();
            //TODO: 使用geocoder 对象完成相关功能
            //地理编码
            geocoder.getLocation(cityName, function (status, result) {
                if (status === 'complete' && result.info === 'OK') {
                    map.setZoom(10);
                    map.setCenter(result.geocodes[0].location);
                    
                    model.CityId = result.geocodes[0].addressComponent.citycode;
                    AMap.service('AMap.PlaceSearch', function () {//回调函数
                                var placeSearch = new AMap.PlaceSearch({ //构造地点查询类
                                    pageSize: 50,
                                    pageIndex: 1,
                                    type: '风景名胜',
                                    city: result.geocodes[0].addressComponent.citycode, //城市
                                    map: map,
                                    panel: "panel"
                                });
                                //关键字查询
                                placeSearch.search('', function (status, result) {
                                    //给panel每条右边加选择框
                                    $("ul .poibox").on("click", function () {
                                        if ($(this).css("background-Color") == "rgb(246, 246, 246)") {
                                            $(this).css("background-Color", "green");
                                            model.SelectStateArray.push(result.poiList.pois[$(this).index()].id + ',' + result.poiList.pois[$(this).index()].location.lng + ',' + result.poiList.pois[$(this).index()].location.lat);
                                        }
                                        else {
                                            $(this).css("background-Color", "");
                                            for (var i = 0; i < model.SelectStateArray.length; i++){
                                                if (model.SelectStateArray[i].split(',')[0] == result.poiList.pois[$(this).index()].id) {
                                                    model.SelectStateArray.remove(i);
                                                    return;
                                                }
                                            }
                                        }
                                    });
                                });
                            });
                        
                } else {
                    //获取经纬度失败
                }
            });
        })
    });
    //输入提示
    var auto = new AMap.Autocomplete({
        input: "startSite"
    });
    AMap.event.addListener(auto, "select", select);//注册监听，当选中某条记录时会触发
    function select(e) {
        console.log(e);
        if (e.poi && e.poi.id) {
            model.startSite = e.poi.id;
        }
    }

</script>
